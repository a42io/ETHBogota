/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Zmorpheus,
  ZmorpheusInterface,
  IZmorpheus,
} from "../../contracts/Zmorpheus";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "merkleTreeDepth",
            type: "uint8",
          },
        ],
        internalType: "struct IZmorpheus.Verifier[]",
        name: "_verifiers",
        type: "tuple[]",
      },
      {
        internalType: "address[]",
        name: "_relayers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "AlreadyRelayer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "AlreadyUsedNullifier",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "EventNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "InsufficientFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "InvalidContractAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
    ],
    name: "InvalidTreeDepth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "NotRelayer",
    type: "error",
  },
  {
    inputs: [],
    name: "Semaphore__GroupAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "Semaphore__GroupDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Semaphore__GroupIdIsNotLessThanSnarkScalarField",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "hostAddress",
        type: "address",
      },
    ],
    name: "EventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeDepth",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
    ],
    name: "GroupCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newIdentityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
    ],
    name: "MemberUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "NullifierHashAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "merkleTreeDepth",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IZmorpheus.Verifier",
        name: "verifier",
        type: "tuple",
      },
    ],
    name: "VerifierAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "merkleTreeDepth",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct IZmorpheus.Verifier",
        name: "verifier",
        type: "tuple",
      },
    ],
    name: "VerifierRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_identityCommitment",
        type: "uint256",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "merkleTreeDepth",
            type: "uint8",
          },
        ],
        internalType: "struct IZmorpheus.Verifier",
        name: "_verifier",
        type: "tuple",
      },
    ],
    name: "addVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_zeroValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "createEvent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "address",
        name: "hostAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getMerkleTreeDepth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getMerkleTreeRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getNumberOfMerkleTreeLeaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "relayers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_identityCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_proofSiblings",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "_proofPathIndices",
        type: "uint8[]",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "merkleTreeDepth",
            type: "uint8",
          },
        ],
        internalType: "struct IZmorpheus.Verifier",
        name: "_verifier",
        type: "tuple",
      },
    ],
    name: "removeVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "verifiers",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_signal",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_externalNullifier",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyMembership",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_signal",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_externalNullifier",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyMembershipOnlyOnce",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200330a3803806200330a8339818101604052810190620000379190620004e1565b620000576200004b6200023760201b60201c565b6200023f60201b60201c565b60005b83518160ff1610156200016257838160ff1681518110620000a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015160036000868460ff1681518110620000f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516020015160ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080620001599062000671565b9150506200005a565b600090505b82518160ff1610156200022657600160046000858460ff1681518110620001b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200021d9062000671565b91505062000167565b81600281905550505050506200075d565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006200031c620003168462000592565b62000569565b905080838252602082019050828560208602820111156200033c57600080fd5b60005b85811015620003705781620003558882620003ef565b8452602084019350602083019250506001810190506200033f565b5050509392505050565b6000620003916200038b84620005c1565b62000569565b90508083825260208201905082856040860282011115620003b157600080fd5b60005b85811015620003e55781620003ca888262000460565b845260208401935060408301925050600181019050620003b4565b5050509392505050565b60008151905062000400816200070f565b92915050565b600082601f8301126200041857600080fd5b81516200042a84826020860162000305565b91505092915050565b600082601f8301126200044557600080fd5b8151620004578482602086016200037a565b91505092915050565b6000604082840312156200047357600080fd5b6200047f604062000569565b905060006200049184828501620003ef565b6000830152506020620004a784828501620004ca565b60208301525092915050565b600081519050620004c48162000729565b92915050565b600081519050620004db8162000743565b92915050565b600080600060608486031215620004f757600080fd5b600084015167ffffffffffffffff8111156200051257600080fd5b620005208682870162000433565b935050602084015167ffffffffffffffff8111156200053e57600080fd5b6200054c8682870162000406565b92505060406200055f86828701620004b3565b9150509250925092565b60006200057562000588565b90506200058382826200063b565b919050565b6000604051905090565b600067ffffffffffffffff821115620005b057620005af620006cf565b5b602082029050602081019050919050565b600067ffffffffffffffff821115620005df57620005de620006cf565b5b602082029050602081019050919050565b6000620005fd8262000604565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6200064682620006fe565b810181811067ffffffffffffffff82111715620006685762000667620006cf565b5b80604052505050565b60006200067e826200062e565b915060ff821415620006955762000694620006a0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200071a81620005f0565b81146200072657600080fd5b50565b620007348162000624565b81146200074057600080fd5b50565b6200074e816200062e565b81146200075a57600080fd5b50565b612b9d806200076d6000396000f3fe6080604052600436106101235760003560e01c80638da5cb5b116100a0578063dabc4d5111610064578063dabc4d51146103de578063dd39f00d1461041b578063ddca3f4314610444578063e7dd0c2f1461046f578063f2fde38b1461048b5761012a565b80638da5cb5b146102f4578063ac1eff681461031f578063ba0422161461035c578063c3ba261214610399578063d1b2dd28146103b55761012a565b80635300f841116100e75780635300f841146101fd57806360f0a5ac1461023a578063638480be146102635780636389e107146102a0578063715018a6146102dd5761012a565b80630b7914301461012c5780631783efc31461016b5780631c1370b2146101945780633ccfd60b146101bd57806343989f85146101d45761012a565b3661012a57005b005b34801561013857600080fd5b50610153600480360381019061014e9190611d5b565b6104b4565b604051610162939291906123a4565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190611dfc565b61051e565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190611d32565b6105c8565b005b3480156101c957600080fd5b506101d2610667565b005b3480156101e057600080fd5b506101fb60048036038101906101f69190611e38565b6107ab565b005b34801561020957600080fd5b50610224600480360381019061021f9190611ce0565b61085d565b6040516102319190612422565b60405180910390f35b34801561024657600080fd5b50610261600480360381019061025c9190611ce0565b61087d565b005b34801561026f57600080fd5b5061028a60048036038101906102859190611d5b565b6109b1565b60405161029791906125c5565b60405180910390f35b3480156102ac57600080fd5b506102c760048036038101906102c29190611d5b565b6109d0565b6040516102d491906125c5565b60405180910390f35b3480156102e957600080fd5b506102f26109ef565b005b34801561030057600080fd5b50610309610a03565b6040516103169190612389565b60405180910390f35b34801561032b57600080fd5b5061034660048036038101906103419190611d5b565b610a2d565b6040516103539190612458565b60405180910390f35b34801561036857600080fd5b50610383600480360381019061037e9190611d84565b610a60565b6040516103909190612422565b60405180910390f35b6103b360048036038101906103ae9190611ed3565b610b17565b005b3480156103c157600080fd5b506103dc60048036038101906103d79190611d32565b610f26565b005b3480156103ea57600080fd5b5061040560048036038101906104009190611d5b565b610fa5565b60405161041291906125c5565b60405180910390f35b34801561042757600080fd5b50610442600480360381019061043d9190611ce0565b610fc4565b005b34801561045057600080fd5b506104596110f9565b60405161046691906125c5565b60405180910390f35b61048960048036038101906104849190611d84565b6110ff565b005b34801561049757600080fd5b506104b260048036038101906104ad9190611ce0565b6111a3565b005b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b6004600061052a611227565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105ba5761057e611227565b6040517f366b2e5a0000000000000000000000000000000000000000000000000000000081526004016105b19190612389565b60405180910390fd5b6105c4828261122f565b5050565b6105d0611356565b806000015160036000836020015160ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f564645df973dfb1e7efcea0a3fd8b1a17885b551004060cebd294079a39f12fd8160405161065c91906125aa565b60405180910390a150565b61066f611356565b600047116106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a9906124d3565b60405180910390fd5b60006106bc610a03565b73ffffffffffffffffffffffffffffffffffffffff16476040516106df90612374565b60006040518083038185875af1925050503d806000811461071c576040519150601f19603f3d011682016040523d82523d6000602084013e610721565b606091505b5050905080610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c906124b3565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff67611512e0a2d90c96fd3f08dca4971bc45fba9dc679eabe839a32abbe58a8e60405160405180910390a250565b600460006107b7611227565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108475761080b611227565b6040517f366b2e5a00000000000000000000000000000000000000000000000000000000815260040161083e9190612389565b60405180910390fd5b6108558686868686866113d4565b505050505050565b60046020528060005260406000206000915054906101000a900460ff1681565b610885611356565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661091357806040517f366b2e5a00000000000000000000000000000000000000000000000000000000815260040161090a9190612389565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b60405160405180910390a250565b6000806000838152602001908152602001600020600201549050919050565b6000806000838152602001908152602001600020600001549050919050565b6109f7611356565b610a0160006114fc565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610a6c87610fa5565b90506000610a79886109d0565b90506000811415610ac157876040517f90e0fe53000000000000000000000000000000000000000000000000000000008152600401610ab891906125c5565b60405180910390fd5b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610b078884898989866115c2565b6001935050505095945050505050565b82600073ffffffffffffffffffffffffffffffffffffffff16600360008360ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bc057806040517f2ad8ef12000000000000000000000000000000000000000000000000000000008152600401610bb79190612640565b60405180910390fd5b600254341015610c0b57600254346040517fa458261b000000000000000000000000000000000000000000000000000000008152600401610c029291906125e0565b60405180910390fd5b60007f80ac58cd00000000000000000000000000000000000000000000000000000000905060007fd9b67a260000000000000000000000000000000000000000000000000000000090508373ffffffffffffffffffffffffffffffffffffffff166301ffc9a7836040518263ffffffff1660e01b8152600401610c8e919061243d565b60206040518083038186803b158015610ca657600080fd5b505afa158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde9190611d09565b1580610d7057508373ffffffffffffffffffffffffffffffffffffffff166301ffc9a7826040518263ffffffff1660e01b8152600401610d1e919061243d565b60206040518083038186803b158015610d3657600080fd5b505afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e9190611d09565b155b15610db257836040517f19bb4029000000000000000000000000000000000000000000000000000000008152600401610da99190612389565b60405180910390fd5b610dc0878760ff16876118bb565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001428152506005600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16887f10a0300c0df7ab14b65245728be2a142361ff9417dfc7e00c59671bbc48a32bb8989604051610f1592919061265b565b60405180910390a450505050505050565b610f2e611356565b60036000826020015160ff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690557f351f5582b9b7e9da0e37173efe18b53007e0eeb1af62fdefc3dcc57f4ccb9b2d81604051610f9a91906125aa565b60405180910390a150565b6000806000838152602001908152602001600020600101549050919050565b610fcc611356565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561105b57806040517f8e0a7e7c0000000000000000000000000000000000000000000000000000000081526004016110529190612389565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c560405160405180910390a250565b60025481565b61110c8585858585610a60565b506006600084815260200190815260200160002060009054906101000a900460ff161561117057826040517f9e1b71d700000000000000000000000000000000000000000000000000000000815260040161116791906125c5565b60405180910390fd5b60016006600085815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505050565b6111ab611356565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561121b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121290612473565b60405180910390fd5b611224816114fc565b50565b600033905090565b600061123a836109d0565b1415611272576040517f029f057900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083815260200190815260200160002073__$0c6eb7207c37accf1552a1c47686411ac0$__63168703fa9091836040518363ffffffff1660e01b81526004016112be9291906124f3565b60006040518083038186803b1580156112d657600080fd5b505af41580156112ea573d6000803e3d6000fd5b5050505060006112f983610fa5565b905060006001611308856109b1565b6113129190612857565b9050837f19239b3f93cd10558aaf11423af70c77763bf54f52bcc75bfa74d4d13548cde982858560405161134893929190612609565b60405180910390a250505050565b61135e611227565b73ffffffffffffffffffffffffffffffffffffffff1661137c610a03565b73ffffffffffffffffffffffffffffffffffffffff16146113d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c990612493565b60405180910390fd5b565b60006113df87610fa5565b1415611417576040517f029f057900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008087815260200190815260200160002073__$0c6eb7207c37accf1552a1c47686411ac0$__630629596f909187878787876040518763ffffffff1660e01b815260040161146b9695949392919061251c565b60006040518083038186803b15801561148357600080fd5b505af4158015611497573d6000803e3d6000fd5b5050505060006114a687610fa5565b905060006114b48484611a13565b9050877f3108849c053c77b8073a11256dffb5ffd5b55e93e105a355e1c9061db890d8718289856040516114ea93929190612609565b60405180910390a25050505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006115cd87611b42565b90508173ffffffffffffffffffffffffffffffffffffffff16635fe8c13b604051806040016040528086600060088110611630577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815260200186600160088110611674577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525060405180604001604052806040518060400160405280896002600881106116cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815260200189600360088110611710577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152508152602001604051806040016040528089600460088110611762577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152602001896005600881106117a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152508152506040518060400160405280886006600881106117f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581526020018860076008811061183a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525060405180608001604052808c81526020018b81526020018781526020018a8152506040518563ffffffff1660e01b815260040161188294939291906123db565b60006040518083038186803b15801561189a57600080fd5b505afa1580156118ae573d6000803e3d6000fd5b5050505050505050505050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310611914576040517fa61c78ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061191f846109d0565b14611956576040517f8121725b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008084815260200190815260200160002073__$0c6eb7207c37accf1552a1c47686411ac0$__631095fbb4909184846040518463ffffffff1660e01b81526004016119a493929190612573565b60006040518083038186803b1580156119bc57600080fd5b505af41580156119d0573d6000803e3d6000fd5b50505050827f0d000126c26c1bbe400fd2332187f75d58b69306f9ec47b408686189d3a008338383604051611a069291906125e0565b60405180910390a2505050565b6000806000905060008484905090505b60008160ff161115611b37576000821180611a9e575060008585600184611a4a919061288b565b60ff16818110611a83577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190611a989190611f36565b60ff1614155b15611b2b57600282611ab091906127fd565b915060018585600184611ac3919061288b565b60ff16818110611afc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190611b119190611f36565b60ff161415611b2a57600182611b2791906127a7565b91505b5b80600190039050611a23565b508091505092915050565b6000600882604051602001611b579190612359565b6040516020818303038152906040528051906020012060001c901c9050919050565b600081359050611b8881612af4565b92915050565b600081905082602060080282011115611ba657600080fd5b92915050565b60008083601f840112611bbe57600080fd5b8235905067ffffffffffffffff811115611bd757600080fd5b602083019150836020820283011115611bef57600080fd5b9250929050565b60008083601f840112611c0857600080fd5b8235905067ffffffffffffffff811115611c2157600080fd5b602083019150836020820283011115611c3957600080fd5b9250929050565b600081519050611c4f81612b0b565b92915050565b600081359050611c6481612b22565b92915050565b600060408284031215611c7c57600080fd5b611c866040612684565b90506000611c9684828501611b79565b6000830152506020611caa84828501611ccb565b60208301525092915050565b600081359050611cc581612b39565b92915050565b600081359050611cda81612b50565b92915050565b600060208284031215611cf257600080fd5b6000611d0084828501611b79565b91505092915050565b600060208284031215611d1b57600080fd5b6000611d2984828501611c40565b91505092915050565b600060408284031215611d4457600080fd5b6000611d5284828501611c6a565b91505092915050565b600060208284031215611d6d57600080fd5b6000611d7b84828501611cb6565b91505092915050565b60008060008060006101808688031215611d9d57600080fd5b6000611dab88828901611cb6565b9550506020611dbc88828901611c55565b9450506040611dcd88828901611cb6565b9350506060611dde88828901611cb6565b9250506080611def88828901611b8e565b9150509295509295909350565b60008060408385031215611e0f57600080fd5b6000611e1d85828601611cb6565b9250506020611e2e85828601611cb6565b9150509250929050565b60008060008060008060808789031215611e5157600080fd5b6000611e5f89828a01611cb6565b9650506020611e7089828a01611cb6565b955050604087013567ffffffffffffffff811115611e8d57600080fd5b611e9989828a01611bac565b9450945050606087013567ffffffffffffffff811115611eb857600080fd5b611ec489828a01611bf6565b92509250509295509295509295565b60008060008060808587031215611ee957600080fd5b6000611ef787828801611cb6565b9450506020611f0887828801611ccb565b9350506040611f1987828801611cb6565b9250506060611f2a87828801611b79565b91505092959194509250565b600060208284031215611f4857600080fd5b6000611f5684828501611ccb565b91505092915050565b6000611f6b838361201c565b60408301905092915050565b6000611f8383836122ff565b60208301905092915050565b6000611f9b838361234a565b60208301905092915050565b611fb0816128bf565b82525050565b611fbf816128bf565b82525050565b611fce816126d1565b611fd88184612726565b9250611fe3826126a9565b8060005b83811015612014578151611ffb8782611f5f565b9650612006836126f2565b925050600181019050611fe7565b505050505050565b612025816126dc565b61202f8184612731565b925061203a826126b3565b8060005b8381101561206b5781516120528782611f77565b965061205d836126ff565b92505060018101905061203e565b505050505050565b61207c816126dc565b612086818461273c565b9250612091826126b3565b8060005b838110156120c25781516120a98782611f77565b96506120b4836126ff565b925050600181019050612095565b505050505050565b6120d3816126e7565b6120dd8184612747565b92506120e8826126bd565b8060005b838110156121195781516121008782611f77565b965061210b8361270c565b9250506001810190506120ec565b505050505050565b600061212d8385612752565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561215c57600080fd5b60208302925061216d83858461296e565b82840190509392505050565b60006121858385612763565b9350612190826126c7565b8060005b858110156121c9576121a68284612790565b6121b08882611f8f565b97506121bb83612719565b925050600181019050612194565b5085925050509392505050565b6121df816128d1565b82525050565b6121f66121f1826128dd565b6129ae565b82525050565b612205816128e7565b82525050565b6122148161294a565b82525050565b600061222760268361277f565b915061223282612a27565b604082019050919050565b600061224a60208361277f565b915061225582612a76565b602082019050919050565b600061226d600f8361277f565b915061227882612a9f565b602082019050919050565b6000612290600083612774565b915061229b82612ac8565b600082019050919050565b60006122b3601e8361277f565b91506122be82612acb565b602082019050919050565b8082525050565b6040820160008201516122e66000850182611fa7565b5060208201516122f9602085018261232c565b50505050565b61230881612933565b82525050565b61231781612933565b82525050565b61232681612933565b82525050565b6123358161293d565b82525050565b6123448161293d565b82525050565b6123538161293d565b82525050565b600061236582846121e5565b60208201915081905092915050565b600061237f82612283565b9150819050919050565b600060208201905061239e6000830184611fb6565b92915050565b60006060820190506123b96000830186611fb6565b6123c66020830185611fb6565b6123d3604083018461230e565b949350505050565b6000610180820190506123f16000830187612073565b6123fe6040830186611fc5565b61240b60c0830185612073565b6124196101008301846120ca565b95945050505050565b600060208201905061243760008301846121d6565b92915050565b600060208201905061245260008301846121fc565b92915050565b600060208201905061246d600083018461220b565b92915050565b6000602082019050818103600083015261248c8161221a565b9050919050565b600060208201905081810360008301526124ac8161223d565b9050919050565b600060208201905081810360008301526124cc81612260565b9050919050565b600060208201905081810360008301526124ec816122a6565b9050919050565b600060408201905061250860008301856122c9565b612515602083018461231d565b9392505050565b600060808201905061253160008301896122c9565b61253e602083018861231d565b8181036040830152612551818688612121565b90508181036060830152612566818486612179565b9050979650505050505050565b600060608201905061258860008301866122c9565b612595602083018561231d565b6125a2604083018461231d565b949350505050565b60006040820190506125bf60008301846122d0565b92915050565b60006020820190506125da600083018461230e565b92915050565b60006040820190506125f5600083018561230e565b612602602083018461230e565b9392505050565b600060608201905061261e600083018661230e565b61262b602083018561230e565b612638604083018461230e565b949350505050565b6000602082019050612655600083018461233b565b92915050565b6000604082019050612670600083018561233b565b61267d602083018461230e565b9392505050565b600061268e61269f565b905061269a828261297d565b919050565b6000604051905090565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060049050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061279f6020840184611ccb565b905092915050565b60006127b282612933565b91506127bd83612933565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127f2576127f16129b8565b5b828201905092915050565b600061280882612933565b915061281383612933565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561284c5761284b6129b8565b5b828202905092915050565b600061286282612933565b915061286d83612933565b9250828210156128805761287f6129b8565b5b828203905092915050565b60006128968261293d565b91506128a18361293d565b9250828210156128b4576128b36129b8565b5b828203905092915050565b60006128ca82612913565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006129558261295c565b9050919050565b600061296782612913565b9050919050565b82818337600083830152505050565b61298682612a16565b810181811067ffffffffffffffff821117156129a5576129a46129e7565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b50565b7f4e6f7420456e6f7567682042616c616e6365204f6620436f6e74726163740000600082015250565b612afd816128bf565b8114612b0857600080fd5b50565b612b14816128d1565b8114612b1f57600080fd5b50565b612b2b816128dd565b8114612b3657600080fd5b50565b612b4281612933565b8114612b4d57600080fd5b50565b612b598161293d565b8114612b6457600080fd5b5056fea26469706673582212200873d892ceaed66eb8bbceb2a401ebcc68087a374ad108924ab0e87719a2a73964736f6c63430008040033";

type ZmorpheusConstructorParams =
  | [linkLibraryAddresses: ZmorpheusLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZmorpheusConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Zmorpheus__factory extends ContractFactory {
  constructor(...args: ZmorpheusConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Zmorpheus__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: ZmorpheusLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0c6eb7207c37accf1552a1c47686411ac0\\$__", "g"),
      linkLibraryAddresses[
        "@zk-kit/incremental-merkle-tree.sol/IncrementalBinaryTree.sol:IncrementalBinaryTree"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _verifiers: IZmorpheus.VerifierStruct[],
    _relayers: PromiseOrValue<string>[],
    _fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Zmorpheus> {
    return super.deploy(
      _verifiers,
      _relayers,
      _fee,
      overrides || {}
    ) as Promise<Zmorpheus>;
  }
  override getDeployTransaction(
    _verifiers: IZmorpheus.VerifierStruct[],
    _relayers: PromiseOrValue<string>[],
    _fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifiers,
      _relayers,
      _fee,
      overrides || {}
    );
  }
  override attach(address: string): Zmorpheus {
    return super.attach(address) as Zmorpheus;
  }
  override connect(signer: Signer): Zmorpheus__factory {
    return super.connect(signer) as Zmorpheus__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZmorpheusInterface {
    return new utils.Interface(_abi) as ZmorpheusInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Zmorpheus {
    return new Contract(address, _abi, signerOrProvider) as Zmorpheus;
  }
}

export interface ZmorpheusLibraryAddresses {
  ["@zk-kit/incremental-merkle-tree.sol/IncrementalBinaryTree.sol:IncrementalBinaryTree"]: string;
}
